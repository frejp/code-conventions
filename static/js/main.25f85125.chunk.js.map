{"version":3,"sources":["hooks/useGetUser/index.ts","hooks/useUserSearch/searchUsers.query.tsx","hooks/useUserSearch/useUserSearch.tsx","hooks/useUserSearch/index.ts","hooks/useGetUser/useGetUserDetail.query.tsx","hooks/useGetUser/useGetUserDetail.tsx","routes/UserList/UserCard.tsx","components/Footer/Footer.tsx","components/StickyHeader/StickyHeader.tsx","components/LoadingScreen/LoadingScreen.tsx","routes/UserList/UserList.tsx","routes/UserDetail/UserCardDesktop.tsx","routes/UserDetail/UserStatsDesktop.tsx","routes/UserDetail/UserDetailDesktop.tsx","routes/UserDetail/UserStatsMobile.tsx","routes/UserDetail/UserCardMobile.tsx","routes/UserDetail/UserDetailMobile.tsx","routes/UserDetail/UserDetail.tsx","App.router.tsx","index.tsx","hooks/index.ts"],"names":["searchUsersQuery","gql","useUserSearch","useState","startCursor","endCursor","hasNextPage","hasPreviousPage","pageInfo","setPageInfo","query","setQuery","useLazyQuery","searchForUsers","loading","data","pageInfoFromData","search","useEffect","performSearch","variables","users","searchUsers","edges","filter","edge","node","__typename","map","mapDataToUsers","getNext","after","getPrevious","before","searchQuery","queryParam","usersIsLoading","useGetUserDetailQuery","emptyUserDetail","id","avatarUrl","bio","bioHTML","email","createdAt","name","login","location","useGetUserDetail","useQuery","userDetail","user","userDataWithNoNullProperties","Object","entries","reduce","a","k","v","repositoriesTotalCount","repositories","totalCount","toString","repositoriesContributedTo","gists","followers","mapDataToUserDetail","UserCard","Card","key","className","data-testid","fluid","to","Image","alt","src","Content","Header","style","color","FlexWrapper","styled","footer","FlexItem","div","Footer","back","next","Button","disabled","icon","labelPosition","onClick","size","Icon","Wrapper","header","StickyHeader","contextRef","resultSelect","searchResultTitles","title","searchInput","setSearchInput","Sticky","context","Search","onResultSelect","e","result","onSearchChange","_","debounce","event","searchString","value","leading","results","Divider","fitted","LoadingScreen","Dimmer","active","inverted","Loader","BodyWrapper","UserList","setContextRef","ref","instance","Group","doubling","itemsPerRow","UserCardDesktop","dateString","wrapped","Meta","substring","indexOf","Description","UserStatsDesktop","Statistic","Value","Label","UserDetailWrapper","UserCardWrapper","UserStatsWrapper","UserDetailDesktop","as","Container","Link","positive","UserStatsMobile","UserCardMobile","extra","UserDetailMobile","HideForDesktop","HideForMobile","UserDetail","match","params","client","ApolloClient","uri","App","basename","process","render","component","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.25f85125.chunk.js","sourcesContent":["export * from './useGetUserDetail';\nexport * from './useGetuserDetail.types'","import gql from 'graphql-tag';\n\nexport const searchUsersQuery = gql`\n  query searchUsers($query: String!, $after: String) {\n    search(query: $query, type: USER, first: 30, after: $after) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          ... on User {\n            id\n            email\n            login\n            avatarUrl\n            bio\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n","import { useLazyQuery } from 'react-apollo';\nimport { useEffect, useState } from 'react';\n\nimport { searchUsersQuery } from './searchUsers.query';\nimport {\n  searchUsers as SearchUsers,\n  searchUsers_search_edges as Edge,\n  searchUsers_search_edges_node_User as UserNode\n} from '../../graphql';\n\ninterface PageInfo {\n  startCursor: string|null\n  endCursor: string|null\n  hasNextPage: boolean|null\n  hasPreviousPage: boolean|null\n}\n\ninterface SearchVariables {\n  query: string\n  before?: string|null\n  after?: string|null\n}\n\nconst mapDataToUsers = (searchUsers: SearchUsers): UserNode[] | undefined => {\n  if (!searchUsers?.search?.edges) {\n    return undefined;\n  }\n  const edges = searchUsers.search.edges.filter(function (edge) {\n    return edge != null;\n  }) as Edge[];\n  const userEdges = edges.filter((edge) => (edge.node != null && edge.node.__typename === \"User\"));\n  const userNodes = userEdges.map(edge => edge.node) as UserNode[];\n  return userNodes;\n};\n\nexport const useUserSearch = () => {\n  const [pageInfo, setPageInfo] = useState<PageInfo>({\n    startCursor: null,\n    endCursor: null,\n    hasNextPage: null,\n    hasPreviousPage: null,\n  });\n  const [query, setQuery] = useState<string|null>(null);\n  const [searchForUsers, { loading, data }] = useLazyQuery(searchUsersQuery);\n\n  const pageInfoFromData = data?.search?.pageInfo\n\n  useEffect(() => {\n    if (pageInfoFromData) {\n      setPageInfo(pageInfoFromData);\n    }\n  }, [pageInfoFromData]);\n\n  const performSearch = (variables: SearchVariables) => {\n    searchForUsers({\n      variables,\n    });\n  };\n\n  const searchQuery = (queryParam: string) => {\n    setQuery(queryParam);\n    performSearch({\n      query: queryParam,\n      after: null,\n    });\n  };\n\n  const getPrevious = () => {\n    const variables = {\n      query: query as string,\n      before: pageInfo.startCursor,\n    };\n    performSearch(variables);\n  };\n\n  const getNext = () => {\n    const variables = {\n      query: query as string,\n      after: pageInfo.endCursor,\n    };\n    performSearch(variables);\n  };\n\n  const users = mapDataToUsers(data);\n\n  return {\n    getNext,\n    getPrevious,\n    searchQuery,\n    pageInfo,\n    users,\n    usersIsLoading: loading,\n    hasNextPage: pageInfo.hasNextPage,\n    hasPreviousPage: pageInfo.hasPreviousPage,\n  };\n};\n","export * from './useUserSearch';\n","import gql from 'graphql-tag';\n\nexport const useGetUserDetailQuery = gql`\n  query getUserDetailQuery($login: String!) {\n    user(login: $login) {\n      id\n      anyPinnableItems\n      avatarUrl\n      bio\n      bioHTML\n      company\n      companyHTML\n      email\n      databaseId\n      createdAt\n      name\n      login\n      avatarUrl\n      repositories(first: 10) {\n        edges {\n          node {\n            id\n          }\n        }\n        totalCount\n      }\n      repositoriesContributedTo {\n        totalCount\n      }\n      gists(first: 10) {\n        pageInfo {\n          endCursor\n          startCursor\n        }\n        totalCount\n      }\n      followers(first: 10) {\n        totalCount\n      }\n    }\n  }\n`;\n","import { useQuery } from 'react-apollo';\n\nimport { useGetUserDetailQuery } from './useGetUserDetail.query';\nimport { getUserDetailQuery as UserDetailNode } from '../../graphql';\nimport { UserDetailType, UseGetUserDetailType } from './useGetuserDetail.types';\n\nconst emptyUserDetail = {\n  id: '',\n  avatarUrl: '',\n  bio: '',\n  bioHTML: '',\n  email: '',\n  createdAt: '',\n  name: '',\n  login: '',\n  location: '',\n};\n\nconst mapDataToUserDetail = (data: UserDetailNode): UserDetailType | undefined => {\n  if (!data?.user) {\n    return undefined;\n  }\n\n  const userDataWithNoNullProperties = Object.entries(data.user).reduce((a, [k, v]) => (v === null ? a : { ...a, [k]: v }), {});\n\n  const userDetail = {\n    ...emptyUserDetail,\n    ...userDataWithNoNullProperties,\n    repositoriesTotalCount: data.user.repositories?.totalCount?.toString(10),\n    repositoriesContributedTo: data.user.repositoriesContributedTo?.totalCount?.toString(10),\n    gists: data.user.gists?.totalCount?.toString(10),\n    followers: data.user.followers?.totalCount?.toString(10),\n  };\n\n  return userDetail;\n};\n\nexport const useGetUserDetail = (login: string): UseGetUserDetailType => {\n  const { loading, data } = useQuery(useGetUserDetailQuery, {\n    variables: {\n      login,\n    },\n  });\n\n  const userDetail = mapDataToUserDetail(data);\n\n  if (loading) {\n    return {\n      userDetail,\n      loading,\n    };\n  }\n\n  return {\n    userDetail,\n    loading,\n  };\n};\n","import * as React from 'react';\nimport { Card, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { searchUsers_search_edges_node_User as UserNode } from '../../graphql';\n\ninterface Props {\n  user: UserNode;\n}\n\nexport const UserCard: React.FunctionComponent<Props> = ({ user }) => {\n  return (\n    <Card key={user.id} className=\"dangerously-override-border\" data-testid=\"user-card\" fluid>\n      <Link data-testid={`user-card-${user.login}`} to={`/user/${user.login}`}>\n        <Image alt=\"user-profile-image\" src={user.avatarUrl} />\n      </Link>\n      <Card.Content>\n        <Card.Header>\n          <Link style={{ color: '#050506' }} to={`/user/${user.login}`}>\n            {user.login}\n          </Link>\n        </Card.Header>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default UserCard;\n","import * as React from 'react';\nimport { Icon, Button } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nconst FlexWrapper = styled.footer`\n  display: flex;\n  margin: calc(50% - 130px);\n  width: 260px;\n  height: 50px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\n\nexport const FlexItem = styled.div`\n  flex: 1;\n`;\n\ninterface Props {\n  back: () => void;\n  next: () => void;\n  hasNextPage: boolean|null;\n  hasPreviousPage: boolean|null;\n}\n\nexport const Footer: React.FunctionComponent<Props> = ({ back, next, hasNextPage, hasPreviousPage }) => {\n  return (\n    <FlexWrapper>\n      <FlexItem>\n        <Button disabled={!hasPreviousPage} icon labelPosition=\"left\" onClick={back} size=\"large\">\n          Back\n          <Icon name=\"angle left\" />\n        </Button>\n      </FlexItem>\n      <FlexItem>\n        <Button disabled={!hasNextPage} icon labelPosition=\"right\" onClick={next} size=\"large\">\n          Next\n          <Icon name=\"angle right\" />\n        </Button>\n      </FlexItem>\n    </FlexWrapper>\n  );\n};\n\nexport default Footer;\n","import * as React from 'react';\nimport { Sticky, Icon, Divider, Search, SearchProps } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport { useState } from 'react';\n\nimport { useUserSearch } from '../../hooks';\n\ninterface Props {\n  contextRef: any;\n  resultSelect: (result: string) => void\n}\n\nexport const Wrapper = styled.header`\n  width: 100%;\n  height: 90px;\n`;\n\nexport const FlexWrapper = styled.div`\n  background-color: white;\n  width: 100%;\n  height: 100%;\n  padding-left: 10%;\n  padding-right: 10%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const StickyHeader: React.FunctionComponent<Props> = ({ contextRef, resultSelect }) => {\n  const { usersIsLoading, users, searchQuery } = useUserSearch();\n\n  const searchResultTitles = users?.map(user => ({title: user.login}))\n  const [searchInput, setSearchInput] = useState('');\n\n  const handleSearch = (event: React.MouseEvent<HTMLElement, MouseEvent>, data: SearchProps) => {\n    const searchString = data.value as string\n    setSearchInput(searchString);\n    searchQuery(searchString);\n  };\n\n  const handleResultSelect = (e:React.MouseEvent<HTMLDivElement, MouseEvent>, { result }: { result:any}) => {\n    setSearchInput(result.title);\n    resultSelect(result.title);\n  };\n\n  return (\n    <Wrapper>\n      <Sticky context={contextRef}>\n        <Wrapper>\n          <FlexWrapper>\n            <div>\n              <Search\n                loading={usersIsLoading}\n                onResultSelect={handleResultSelect}\n                onSearchChange={_.debounce(handleSearch, 5000, {\n                  leading: true,\n                })}\n                results={searchResultTitles}\n                size=\"large\"\n                value={searchInput}\n              />\n            </div>\n            <div>\n              <Icon name=\"github square\" size=\"huge\" />\n            </div>\n          </FlexWrapper>\n          <Divider fitted />\n        </Wrapper>\n      </Sticky>\n    </Wrapper>\n  );\n};\n","import { Dimmer, Loader } from 'semantic-ui-react';\nimport React from 'react';\n\nexport const LoadingScreen = () => {\n  return (\n    <div data-testid=\"loading-user-profile\">\n      <Dimmer active inverted>\n        <Loader />\n      </Dimmer>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nimport UserCard from './UserCard';\nimport { StickyHeader, Footer, LoadingScreen } from '../../components';\nimport { useUserSearch } from '../../hooks';\n\nexport const BodyWrapper = styled.div`\n  background-color: #f2f2f2;\n  padding-top: 20px;\n  padding-left: 10%;\n  padding-right: 10%;\n`;\n\nexport const UserList: React.FunctionComponent = () => {\n  const {\n    users,\n    usersIsLoading,\n    searchQuery,\n    getNext,\n    getPrevious,\n    hasNextPage,\n    hasPreviousPage,\n  } = useUserSearch();\n\n  const [contextRef, setContextRef] = useState<HTMLElement | null>(null);\n  const handleContextRef = (instance: HTMLElement | null) => setContextRef(instance);\n\n  useEffect(() => {\n    searchQuery('a');\n    // eslint-disable-next-line\n  }, []);\n\n  const handleNext = () => {\n    getNext();\n  };\n\n  const handleBack = () => {\n    getPrevious();\n  };\n\n  const resultSelect = (query: string) => {\n    searchQuery(query);\n  };\n\n  if (usersIsLoading) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <main ref={handleContextRef}>\n      <StickyHeader\n        contextRef={contextRef}\n        resultSelect={resultSelect}\n      />\n      <BodyWrapper>\n        <Card.Group doubling itemsPerRow={5}>\n          {users ? users.map((user )=> <UserCard key={user.id} user={user} />): null}\n        </Card.Group>\n      </BodyWrapper>\n      <Footer back={handleBack} hasNextPage={hasNextPage} hasPreviousPage={hasPreviousPage} next={handleNext} />\n    </main>\n  );\n};\n","import * as React from 'react';\nimport { Card, Image } from 'semantic-ui-react';\n\nimport { UserDetailType } from '../../hooks';\n\ninterface Props {\n  userDetail: UserDetailType;\n}\nconst formatDate = (dateString: string) => {\n  return dateString.substring(0, dateString.indexOf('T'));\n};\n\nexport const UserCardDesktop: React.FunctionComponent<Props> = ({ userDetail }) => {\n  return (\n    <Card fluid>\n      <Image alt=\"user-profile-image\" src={userDetail.avatarUrl} wrapped />\n      <Card.Content>\n        <Card.Header>{userDetail.login}</Card.Header>\n        <Card.Meta>\n          <span className=\"date\">\n            Joined in\n            {userDetail.createdAt ? formatDate(userDetail.createdAt) : null}\n          </span>\n        </Card.Meta>\n        <Card.Description>\n          {userDetail.login} is from\n          {userDetail.location}\n        </Card.Description>\n      </Card.Content>\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { Statistic } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nimport { UserDetailType } from '../../hooks';\n\ninterface Props {\n  userDetail: UserDetailType;\n}\n\nexport const Wrapper = styled.div`\n  margin: auto;\n  width: fit-content;\n`;\n\nexport const UserStatsDesktop: React.FunctionComponent<Props> = ({ userDetail }) => {\n  return (\n    <Wrapper>\n      <Statistic.Group size=\"small\">\n        <Statistic>\n          <Statistic.Value>{userDetail.repositoriesTotalCount}</Statistic.Value>\n          <Statistic.Label>Public Repos</Statistic.Label>\n        </Statistic>\n        <Statistic>\n          <Statistic.Value>{userDetail.gists}</Statistic.Value>\n          <Statistic.Label>Public Gists</Statistic.Label>\n        </Statistic>\n        <Statistic>\n          <Statistic.Value>{userDetail.followers}</Statistic.Value>\n          <Statistic.Label>Followers</Statistic.Label>\n        </Statistic>\n      </Statistic.Group>\n    </Wrapper>\n  );\n};\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Divider, Header, Container, Button } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nimport { UserCardDesktop } from './UserCardDesktop';\nimport { UserStatsDesktop } from './UserStatsDesktop';\nimport { UserDetailType } from '../../hooks';\n\ninterface Props {\n  userDetail: UserDetailType;\n}\n\nconst UserDetailWrapper = styled.div`\n    display: flex;\n    margin-left: 10%;\n    width: 80%;\n    margin-top: 2%;\n`;\n\nconst UserCardWrapper = styled.div`\n  flex: 1;\n  margin-right: 5%;\n  width: 40%;\n  height: auto;\n`;\nconst UserStatsWrapper = styled.div`\n    flex: 1;\n    width: 55%;\n`;\n\nexport const UserDetailDesktop: React.FunctionComponent<Props> = ({ userDetail }) => {\n  return (\n    <UserDetailWrapper>\n      <Divider />\n      <UserCardWrapper>\n        <UserCardDesktop userDetail={userDetail} />\n      </UserCardWrapper>\n      <UserStatsWrapper>\n        <UserStatsDesktop userDetail={userDetail} />\n        <Divider />\n        <Header as=\"h2\">Biography</Header>\n        <Container>\n          <p>{userDetail.bio ? userDetail.bio : 'User has no Biography'}</p>\n        </Container>\n        <Divider />\n        <Button as={Link} name=\"Back\" positive to=\"/\">\n          Back\n        </Button>\n      </UserStatsWrapper>\n    </UserDetailWrapper>\n  );\n};\n","import * as React from 'react';\nimport { Statistic } from 'semantic-ui-react';\n\nimport { UserDetailType } from '../../hooks';\n\ninterface Props {\n  userDetail: UserDetailType;\n}\n\nexport const UserStatsMobile: React.FunctionComponent<Props> = ({ userDetail }) => {\n  return (\n    <Statistic.Group size=\"mini\">\n      <Statistic>\n        <Statistic.Value>{userDetail.repositoriesTotalCount}</Statistic.Value>\n        <Statistic.Label>Repos</Statistic.Label>\n      </Statistic>\n      <Statistic>\n        <Statistic.Value>{userDetail.gists}</Statistic.Value>\n        <Statistic.Label>Gists</Statistic.Label>\n      </Statistic>\n      <Statistic>\n        <Statistic.Value>{userDetail.followers}</Statistic.Value>\n        <Statistic.Label>Followers</Statistic.Label>\n      </Statistic>\n    </Statistic.Group>\n  );\n};\n","import * as React from 'react';\nimport { Card, Image } from 'semantic-ui-react';\n\nimport { UserDetailType } from '../../hooks';\n\ninterface Props {\n  userDetail: UserDetailType;\n}\nconst formatDate = (dateString: string) => {\n  return dateString.substring(0, dateString.indexOf('T'));\n};\n\nexport const UserCardMobile: React.FunctionComponent<Props> = ({ userDetail }) => {\n  return (\n    <Card fluid>\n      <Image alt=\"user-profile-image\" src={userDetail.avatarUrl} wrapped />\n      <Card.Content>\n        <Card.Header>{userDetail.login}</Card.Header>\n        <Card.Meta>\n          <span className=\"date\">\n            Joined in\n            {userDetail.createdAt ? formatDate(userDetail.createdAt) : null}\n          </span>\n        </Card.Meta>\n        <Card.Description>{userDetail.bio ? userDetail.bio : 'User has no Biography'}</Card.Description>\n      </Card.Content>\n      <Card.Content extra />\n    </Card>\n  );\n};\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Divider, Button } from 'semantic-ui-react';\n\nimport { UserStatsMobile } from './UserStatsMobile';\nimport { UserCardMobile } from './UserCardMobile';\nimport { UserDetailType } from '../../hooks';\nimport styled from 'styled-components';\n\ninterface Props {\n  userDetail: UserDetailType;\n}\n\nexport const UserDetailWrapper = styled.div`\n  margin-left: 10%;\n  width: 80%;\n  margin-top: 2%;\n  margin-bottom: 10%;\n`;\n\nexport const UserStatsWrapper = styled.div`\n   margin: auto;\n   width: fit-content;\n   paddingTop: 20px;\n`;\n\nexport const UserDetailMobile: React.FunctionComponent<Props> = ({ userDetail }) => {\n  return (\n    <UserDetailWrapper>\n      <UserStatsWrapper>\n        <UserStatsMobile userDetail={userDetail} />\n      </UserStatsWrapper>\n      <Divider />\n      <UserCardMobile userDetail={userDetail} />\n      <Button as={Link} name=\"Back\" positive to=\"/\">\n        Back\n      </Button>\n    </UserDetailWrapper>\n  );\n};\n","import React from 'react';\nimport styled from \"styled-components\";\n\nimport { UserDetailDesktop } from './UserDetailDesktop';\nimport { UserDetailMobile } from './UserDetailMobile';\nimport { useGetUserDetail } from '../../hooks';\nimport { LoadingScreen } from '../../components';\n\nconst HideForDesktop= styled.div`\n  @media (min-width: 679px) {\n    display: none !important;\n  }\n`;\n\nconst HideForMobile = styled.div`\n  @media (max-width: 679px) {\n    display: none !important;\n  }\n`;\n\ninterface Props {\n  match: {\n    params: {\n      login: string;\n    };\n  };\n}\n\nexport const UserDetail: React.FunctionComponent<Props> = ({\n  match: {\n    params: { login },\n  },\n}) => {\n  const { userDetail, loading } = useGetUserDetail(login);\n\n  if (loading) {\n    return <LoadingScreen />;\n  }\n\n  if (!userDetail) {\n    return <div>Cannot find userDetail</div>;\n  }\n\n  return (\n    <div data-testid={`user-profile-${'login'}`}>\n      <HideForMobile>\n        <UserDetailDesktop userDetail={userDetail} />\n      </HideForMobile>\n      <HideForDesktop>\n        <UserDetailMobile userDetail={userDetail} />\n      </HideForDesktop>\n    </div>\n  );\n};\n","import React from 'react';\nimport './index.css';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { UserList, UserDetail } from './routes';\n\n/*\n// add your own GitHub personal access token\n//scopes/permissions you need to check: user,repo\nconst token = '';\nconst client = new ApolloClient({\n  request: (operation) => {\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : '',\n      },\n    });\n  },\n  uri: 'https://api.github.com/graphql',\n});\n*/\n\n//This is the same API but trough MY aws-gateway.\nconst client = new ApolloClient({\n  uri: 'https://kc8xol64vj.execute-api.us-east-2.amazonaws.com/fsdfds',\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Route\n          render={({ location }) => (\n            <Switch location={location}>\n              <Route component={UserList} exact path=\"/\" />\n              <Route component={UserDetail} exact path=\"/user/:login\" />\n            </Switch>\n          )}\n        />\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App.router';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","export * from './useUserSearch';\nexport * from './useGetUser';\n"],"sourceRoot":""}